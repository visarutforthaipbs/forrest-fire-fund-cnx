import { useParams, useNavigate } from "react-router-dom";
import {
  Box,
  Container,
  Heading,
  Text,
  Button,
  VStack,
  HStack,
  Badge,
  Divider,
  SimpleGrid,
  Card,
  CardBody,
  Icon,
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
} from "@chakra-ui/react";
import { ArrowBackIcon, ChevronRightIcon } from "@chakra-ui/icons";
import { getVillageById } from "../data/villageDataService";

const VillageDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const village = getVillageById(id);

  if (!village) {
    return (
      <Container maxW="container.lg" py={8}>
        <VStack spacing={4}>
          <Heading color="brand.darkBlue">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô</Heading>
          <Button leftIcon={<ArrowBackIcon />} onClick={() => navigate("/")}>
            ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
          </Button>
        </VStack>
      </Container>
    );
  }

  const getStatusColor = (status) => {
    if (status.hasPlan) return "green";
    if (status.needsVolunteers && status.needsFunding) return "red";
    if (status.needsVolunteers) return "orange";
    if (status.needsFunding) return "purple";
    return "gray";
  };

  return (
    <Box bg="white" minH="100vh">
      <Container maxW="container.lg" py={8}>
        <VStack spacing={6} align="stretch">
          {/* Breadcrumb */}
          <Breadcrumb
            spacing="8px"
            separator={<ChevronRightIcon color="gray.500" />}
          >
            <BreadcrumbItem>
              <BreadcrumbLink
                onClick={() => navigate("/")}
                color="brand.orange"
              >
                üî• ‡πÑ‡∏ü‡∏õ‡πã‡∏≠‡∏î‡∏µ
              </BreadcrumbLink>
            </BreadcrumbItem>
            <BreadcrumbItem isCurrentPage>
              <BreadcrumbLink color="brand.darkBlue">
                {village.name}
              </BreadcrumbLink>
            </BreadcrumbItem>
          </Breadcrumb>

          {/* Back Button */}
          <HStack>
            <Button
              leftIcon={<ArrowBackIcon />}
              variant="outline"
              borderColor="brand.orange"
              color="brand.orange"
              onClick={() => navigate("/")}
            >
              ‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
            </Button>
          </HStack>

          {/* Village Header */}
          <Box>
            <Heading size="2xl" color="brand.darkBlue" mb={4}>
              {village.name}
            </Heading>
            <HStack spacing={3} mb={4}>
              {village.status.hasPlan ? (
                <Badge colorScheme="green" fontSize="md" px={3} py={1}>
                  ‚úÖ ‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß
                </Badge>
              ) : (
                <Badge colorScheme="red" fontSize="md" px={3} py={1}>
                  ‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤
                </Badge>
              )}

              {village.status.needsVolunteers && (
                <Badge colorScheme="orange" fontSize="md" px={3} py={1}>
                  üîß ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏™‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£
                </Badge>
              )}

              {village.status.needsFunding && (
                <Badge colorScheme="purple" fontSize="md" px={3} py={1}>
                  üí∞ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                </Badge>
              )}
            </HStack>
            <Text fontSize="lg" color="gray.600">
              ‡∏ï‡∏≥‡∏ö‡∏•{village.subdistrict} ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠{village.district} ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
              {village.province}
            </Text>

            {village.communityPlan && (
              <Text color="green.600" fontWeight="semibold">
                ‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß
              </Text>
            )}
          </Box>

          <Divider />

          {/* Village Info Cards */}
          <SimpleGrid columns={{ base: 1, md: 2 }} spacing={6}>
            <Card>
              <CardBody>
                <VStack align="start" spacing={4}>
                  <Heading size="md" color="brand.darkBlue">
                    üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
                  </Heading>
                  <VStack align="start" spacing={2}>
                    <HStack>
                      <Text fontWeight="bold">‡∏£‡∏´‡∏±‡∏™‡∏´‡∏°‡∏π‡πà:</Text>
                      <Text>‡∏´‡∏°‡∏π‡πà {village.gisData.mooCode || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">‡∏û‡∏¥‡∏Å‡∏±‡∏î:</Text>
                      <Text>
                        {village.lat.toFixed(4)}, {village.lng.toFixed(4)}
                      </Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</Text>
                      <Badge colorScheme={getStatusColor(village.status)}>
                        {village.status.hasPlan
                          ? "‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÑ‡∏ü‡∏õ‡πà‡∏≤"
                          : "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"}
                      </Badge>
                    </HStack>
                  </VStack>
                </VStack>
              </CardBody>
            </Card>

            <Card>
              <CardBody>
                <VStack align="start" spacing={4}>
                  <Heading size="md" color="brand.darkBlue">
                    üéØ ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
                  </Heading>
                  <VStack align="stretch" spacing={3}>
                    {village.status.hasPlan ? (
                      <Button variant="secondary" size="sm">
                        üìã ‡∏î‡∏π‡πÅ‡∏ú‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤
                      </Button>
                    ) : (
                      <Button variant="primary" size="sm">
                        üìù ‡∏™‡πà‡∏á‡πÅ‡∏ú‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤
                      </Button>
                    )}

                    {village.status.needsVolunteers && (
                      <Button variant="outline" colorScheme="orange" size="sm">
                        üôã‚Äç‚ôÇÔ∏è ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏™‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£
                      </Button>
                    )}

                    {village.status.needsFunding && (
                      <Button variant="outline" colorScheme="purple" size="sm">
                        üíù ‡∏£‡πà‡∏ß‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                      </Button>
                    )}
                  </VStack>
                </VStack>
              </CardBody>
            </Card>
          </SimpleGrid>

          {/* Additional Info */}
          <Card>
            <CardBody>
              <VStack align="start" spacing={4}>
                <Heading size="md" color="brand.darkBlue">
                  üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                </Heading>
                <Text>
                  ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô{village.name} ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
                  "‡πÑ‡∏ü‡∏õ‡πã‡∏≠‡∏î‡∏µ: ‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤"
                  ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                  ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡∏ö‡∏•{village.subdistrict} ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠{village.district}
                </Text>
                <Text>
                  üåç <strong>‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå:</strong> ‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏°‡πÅ‡∏Ç‡πá‡∏á
                  ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô
                </Text>
                <Text>
                  ü§ù <strong>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢:</strong>{" "}
                  ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                </Text>
              </VStack>
            </CardBody>
          </Card>
        </VStack>
      </Container>
    </Box>
  );
};

export default VillageDetail;
