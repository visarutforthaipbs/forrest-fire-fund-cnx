import { useEffect, useState, useImperativeHandle, forwardRef } from "react";
import {
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  ModalCloseButton,
  Button,
  Text,
  VStack,
  HStack,
  Box,
  Heading,
  Icon,
  SimpleGrid,
  Badge,
  Divider,
  useBreakpointValue,
} from "@chakra-ui/react";
import { CheckCircleIcon, InfoIcon, WarningIcon } from "@chakra-ui/icons";

const WelcomeModal = forwardRef((props, ref) => {
  const [isOpen, setIsOpen] = useState(false);
  const isMobile = useBreakpointValue({ base: true, md: false });

  useImperativeHandle(ref, () => ({
    openModal: () => setIsOpen(true),
  }));

  useEffect(() => {
    // Check if user has seen the welcome modal before
    const hasSeenWelcome = localStorage.getItem("hasSeenWelcome");
    if (!hasSeenWelcome) {
      // Delay showing modal slightly for better UX
      const timer = setTimeout(() => {
        setIsOpen(true);
      }, 1000);
      return () => clearTimeout(timer);
    }
  }, []);

  const handleClose = () => {
    setIsOpen(false);
    // Mark that user has seen the welcome modal
    localStorage.setItem("hasSeenWelcome", "true");
  };

  const features = [
    {
      icon: "üó∫Ô∏è",
      title: "‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏∏‡∏°‡∏ä‡∏ô",
      description: "‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á 1,171 ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
      color: "blue.500",
    },
    {
      icon: "üìù",
      title: "‡∏™‡πà‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£",
      description: "‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ä‡∏∏‡∏°‡∏ä‡∏ô",
      color: "orange.500",
    },
    {
      icon: "üìä",
      title: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥",
      description: "‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
      color: "green.500",
    },
    {
      icon: "üîç",
      title: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏á",
      description: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏≤ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏ú‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
      color: "purple.500",
    },
  ];

  const legendItems = [
    { color: "#4CAF50", label: "‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡πâ‡∏ß", count: "20" },
    { color: "#F47B20", label: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ú‡∏ô", count: "1,151" },
  ];

  return (
    <Modal
      isOpen={isOpen}
      onClose={handleClose}
      size={isMobile ? "full" : "2xl"}
      isCentered={!isMobile}
      closeOnOverlayClick={false}
    >
      <ModalOverlay bg="blackAlpha.300" backdropFilter="blur(10px)" />
      <ModalContent
        mx={isMobile ? 0 : 4}
        my={isMobile ? 0 : 8}
        maxH={isMobile ? "100vh" : "90vh"}
        overflowY="auto"
      >
        <ModalHeader
          bg="linear-gradient(135deg, #F47B20 0%, #FF8C42 100%)"
          color="white"
          borderTopRadius="md"
          py={6}
        >
          <VStack spacing={3} align="center">
            <Box fontSize="3xl">üî•</Box>
            <Heading size="lg" textAlign="center">
              ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
            </Heading>
          </VStack>
        </ModalHeader>
        <ModalCloseButton color="white" size="lg" />

        <ModalBody p={6}>
          <VStack spacing={6} align="stretch">
            {/* Platform Introduction */}
            <Box>
              <Text fontSize="lg" color="brand.accent" lineHeight="tall">
                ‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡πÉ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                ‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á{" "}
                <Badge colorScheme="orange" fontSize="md">
                  1,171 ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
                </Badge>{" "}
                ‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
              </Text>
            </Box>

            <Divider />

            {/* Key Features */}
            <Box>
              <Heading size="md" mb={4} color="brand.accent">
                ‚ú® ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å
              </Heading>
              <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4}>
                {features.map((feature, index) => (
                  <Box
                    key={index}
                    p={4}
                    borderRadius="lg"
                    border="1px"
                    borderColor="gray.200"
                    bg="brand.cardBg"
                    _hover={{ shadow: "md", borderColor: "brand.primary" }}
                    transition="all 0.2s"
                  >
                    <HStack spacing={3} align="start">
                      <Box fontSize="2xl">{feature.icon}</Box>
                      <VStack align="start" spacing={1} flex="1">
                        <Text fontWeight="bold" color="brand.accent">
                          {feature.title}
                        </Text>
                        <Text fontSize="sm" color="brand.muted">
                          {feature.description}
                        </Text>
                      </VStack>
                    </HStack>
                  </Box>
                ))}
              </SimpleGrid>
            </Box>

            <Divider />

            {/* Legend */}
            <Box>
              <Heading size="md" mb={4} color="brand.accent">
                üé® ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
              </Heading>
              <VStack spacing={3} align="stretch">
                {legendItems.map((item, index) => (
                  <HStack
                    key={index}
                    justify="space-between"
                    p={3}
                    bg="gray.50"
                    borderRadius="md"
                  >
                    <HStack spacing={3}>
                      <Box
                        w={4}
                        h={4}
                        bg={item.color}
                        borderRadius="sm"
                        boxShadow="sm"
                      />
                      <Text fontWeight="medium" color="brand.accent">
                        {item.label}
                      </Text>
                    </HStack>
                    <Badge colorScheme="gray" fontSize="sm">
                      {item.count} ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
                    </Badge>
                  </HStack>
                ))}
              </VStack>
            </Box>

            <Divider />

            {/* How to Use */}
            <Box>
              <Heading size="md" mb={4} color="brand.accent">
                üöÄ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
              </Heading>
              <VStack spacing={3} align="stretch">
                <HStack align="start" spacing={3}>
                  <Icon as={InfoIcon} color="blue.500" mt={1} />
                  <Text color="brand.accent">
                    <strong>‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô:</strong>{" "}
                    ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                  </Text>
                </HStack>
                <HStack align="start" spacing={3}>
                  <Icon as={CheckCircleIcon} color="green.500" mt={1} />
                  <Text color="brand.accent">
                    <strong>‡∏™‡πà‡∏á‡πÅ‡∏ú‡∏ô:</strong>{" "}
                    ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏° "‡∏™‡πà‡∏á‡πÅ‡∏ú‡∏ô"
                  </Text>
                </HStack>
                <HStack align="start" spacing={3}>
                  <Icon as={WarningIcon} color="orange.500" mt={1} />
                  <Text color="brand.accent">
                    <strong>‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:</strong>{" "}
                    ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢
                  </Text>
                </HStack>
              </VStack>
            </Box>

            {/* Data Source */}
            <Box
              p={4}
              bg="blue.50"
              borderRadius="lg"
              border="1px"
              borderColor="blue.200"
            >
              <Text fontSize="sm" color="blue.800">
                <strong>üí° ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á:</strong>{" "}
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á
                ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏õ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô
              </Text>
            </Box>
          </VStack>
        </ModalBody>

        <ModalFooter bg="gray.50" borderBottomRadius="md">
          <VStack spacing={3} w="full">
            <Button
              variant="primary"
              size="lg"
              w="full"
              onClick={handleClose}
              _hover={{
                bg: "brand.primary",
                transform: "translateY(-1px)",
                shadow: "lg",
              }}
            >
              ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° üöÄ
            </Button>
            <Text fontSize="xs" color="brand.muted" textAlign="center">
              ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏¥‡∏î
            </Text>
          </VStack>
        </ModalFooter>
      </ModalContent>
    </Modal>
  );
});

WelcomeModal.displayName = "WelcomeModal";

export default WelcomeModal;
